<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAAAAACoDgAAFgAAACgAAAAwAAAAYAAAAAEACAAAAAAAgAoAAAAAAAAAAAAAAAEAAAAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAMDcwADwyqYAACBAAAAgYAAAIIAAACCgAAAg
        wAAAIOAAAEAAAABAIAAAQEAAAEBgAABAgAAAQKAAAEDAAABA4AAAYAAAAGAgAABgQAAAYGAAAGCAAABg
        oAAAYMAAAGDgAACAAAAAgCAAAIBAAACAYAAAgIAAAICgAACAwAAAgOAAAKAAAACgIAAAoEAAAKBgAACg
        gAAAoKAAAKDAAACg4AAAwAAAAMAgAADAQAAAwGAAAMCAAADAoAAAwMAAAMDgAADgAAAA4CAAAOBAAADg
        YAAA4IAAAOCgAADgwAAA4OAAQAAAAEAAIABAAEAAQABgAEAAgABAAKAAQADAAEAA4ABAIAAAQCAgAEAg
        QABAIGAAQCCAAEAgoABAIMAAQCDgAEBAAABAQCAAQEBAAEBAYABAQIAAQECgAEBAwABAQOAAQGAAAEBg
        IABAYEAAQGBgAEBggABAYKAAQGDAAEBg4ABAgAAAQIAgAECAQABAgGAAQICAAECAoABAgMAAQIDgAECg
        AABAoCAAQKBAAECgYABAoIAAQKCgAECgwABAoOAAQMAAAEDAIABAwEAAQMBgAEDAgABAwKAAQMDAAEDA
        4ABA4AAAQOAgAEDgQABA4GAAQOCAAEDgoABA4MAAQODgAIAAAACAACAAgABAAIAAYACAAIAAgACgAIAA
        wACAAOAAgCAAAIAgIACAIEAAgCBgAIAggACAIKAAgCDAAIAg4ACAQAAAgEAgAIBAQACAQGAAgECAAIBA
        oACAQMAAgEDgAIBgAACAYCAAgGBAAIBgYACAYIAAgGCgAIBgwACAYOAAgIAAAICAIACAgEAAgIBgAICA
        gACAgKAAgIDAAICA4ACAoAAAgKAgAICgQACAoGAAgKCAAICgoACAoMAAgKDgAIDAAACAwCAAgMBAAIDA
        YACAwIAAgMCgAIDAwACAwOAAgOAAAIDgIACA4EAAgOBgAIDggACA4KAAgODAAIDg4ADAAAAAwAAgAMAA
        QADAAGAAwACAAMAAoADAAMAAwADgAMAgAADAICAAwCBAAMAgYADAIIAAwCCgAMAgwADAIOAAwEAAAMBA
        IADAQEAAwEBgAMBAgADAQKAAwEDAAMBA4ADAYAAAwGAgAMBgQADAYGAAwGCAAMBgoADAYMAAwGDgAMCA
        AADAgCAAwIBAAMCAYADAgIAAwICgAMCAwADAgOAAwKAAAMCgIADAoEAAwKBgAMCggADAoKAAwKDAAMCg
        4ADAwAAAwMAgAMDAQADAwGAAwMCAAMDAoADw+/8ApKCgAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8A////////////////////////9vYIBwf19QcHCAj2////////////////////////////////
        ////////////9gj396ampp+np6emrvf39Qf2//////////////////////////////////////b1rl5W
        Dg0NDU5WVlZWV1+np6739Qj2///////////////////////////////2B6ZWDQEOVp+np6enp6enp6ef
        n6evrvf19v///////////////////////////wemTgEBV1+nrq62t7e3t7e3r6+vr6+np++urAf2////
        ////////////////////914BAVefpre3t7e3t7dkt7e3t7e3t6/v7+/276X19v//////////////////
        //auTgFOX663t6+vt7e3t7dIt7e3t7e3t7e3t+/2//b39/b/////////////////9qYNAVemtrevr6+v
        t7e3t7dQt7e3t7e3t7e3t7cH9vb2B/f2///////////////2pg0BX6a3r65Qt7evt7e3t7dIt7e3t7e3
        t7dRrre3t/bv7wf39v////////////+uDQFXrreur7dRZLevt7e3t7elt7e3t7e3t61Rt7e3t7f2r+/3
        B/b//////////wdOAV+ut66ur6+uSLe3t7e3t7e3t7e3t7e3t0i3t7e3t7e39qfv9wf/////////9l4B
        V6a3rq6ur6+3ZK63t7e3t7e3t7e3t7e3t6W3t7e3t7e3t/Zf7/f2////////pgFOngi2bq6ur6+vt7ev
        t7e3t7e3t7e3t7e3t7e3t7e3t7e3t+/vX/cH//////8ITgFeBwgJtm+vr6+vr7evt7e3t7e3t7e3t7e3
        t7e3t7e3t7e3t7fvn6f39v////+mAVb3CPcICAdvb6+vr6+vt7e3t7e3t7e3t7e3t7e3t7e3t7e3rbe3
        71euB////whOAV4ICFFQ9QgHtm+vr6+3t7e3t7e3t7e3t7e3t7e3t7e3t65RUbe371en9/b//+8BTqUI
        Bwj3SKMICLZvr6+3t7e3t7e3t7e3t7e3t7e3t7e3pEilt7e3r6dW9wj//54BVgcIBwcICAcHCAkHb6+v
        r7e3t7e3t7e3t7e3t7e3t7e3t7e3t7e3t69Opgf/9k4BngkIBwcHBwcHBwgICK9vt6+3t7e3t7e3t7e3
        t7e3t7e3t7e3t7e3t69WX/f2Bw1OpQj2CAcHBwcHBwcICAi3b6+3t7e3t7e3t7e3t7e3t7e3t7e3t7e3
        t6+fVvf27wFO7fYICAgHBwcHBwcICAgIB2+vt7eurre3t7e3t7e3t7e3t7e3t7e3t66nDqb2pgFWB/b2
        CAgIBwcHBwcICAgICAivr7djtre3t7e3t7e3t7e3t7e3t7e3t7anDaYIpgFeB/b29ggICAcHBwcHCAgI
        CAgIt7ekrre3t7e3t7e3t7e3t7e3t7e3t7enDZ4HngFeB/YICAgICAgIBwcHBwgICAgHCK1QpK6urq6u
        rq6urq6urq6ur6+vt7enDV4HngFeCe2amprt9ggICAcHBwcIB6OjrJlIUWRkZGRkZGRkZGRkZGRlSFBQ
        W7efDV4HpgFe9fb29vb2CAgICAgIBwcHCAgICAharre3t7e3t7e3t7e3t7e3t7e3t7efAV4Ipg1eBwj2
        9ggICAgICAgICAgIBwcICAikrq+vr6+vr6+vr6+vr6+vr6+vb7afAV4Irg1W9Qj29ggICAgICAgICAgI
        CAgICAijrq+vr6+vr6+vr6+vr6+vr6+3t7dfAZ72Bw5W9wn29vb2CAgICAgICAgICAgICAikrm+vr6+v
        r6+vr69vr7e3t7e3t7dWAab2CFZWpgn29vb2CAgICAgICAgICAgICPb3t7e3t7e3t7e3t7e3t7e3t7e3
        v68ODvf/9l5OpgkI9vb29vYICAgICAgICAgICPb3t7e3t7e3t7e3t7e3t7e3t7e3v58BTgf//68On+0I
        9vb2Bwf2CAgICAgICAgICPb3t7e3t7e3t7e3t7e3tra3t7e3t1cBVvb//wdXV64JCPakmgf2CAgICAgI
        CAgICAj3t7e3t7e3t7e3t7e3tqOkt7e/pw4Nrv////+nVqf1CJr39vb2CAgICAgICAgICAj3t7e3t7e3
        t7e3t7e3t7etore3VwFWCP////8HV1+uCQj29vb29ggICAgICAgICPb3t7e3t7e3t7e3t7e3t7e3t7+n
        DgGm///////2p1en7QkI9vb29vb2CAgICAgICPb3t7e3t7e3t7e3t7e3t7e3t7dXAU4I////////B59f
        r/UJ9vb29vb29vYICAgICPb3t7e3t7e3t7e3t7e3t7e3B18BDa7//////////+6fp+/1B/b29vb2owj2
        CAgICPb3t7e3t7e3t6O3t7e3t7e/nw4BXv////////////avn6/vCQf29vYHmvb29vYICPb3t7e3t7e3
        t5qut7e3t7+nDgFWCP////////////8Ir6fvB/UJCPaaB/b29vb29vajtre3t7e3t7aat7e3v6dOAU4H
        ////////////////CO+v7wj1CQej9vb29vb29vaat7e3t7e3t7ektrcHnw4BDu7/////////////////
        /wgH9vb2BwcICPb29vb29vaat7e3t7e3t7e3v69XDQFOB/////////////////////8ICP/29gcHCQgI
        9vb29vaZt7e3t7e3t7+2n04BAVYI////////////////////////9gf27+/v7wcHCAkICPYHt7e3t7e2
        r59XAQEOpv////////////////////////////8IB++np6evr+7u7gcHrq6up59XTg0BDl4H////////
        /////////////////////////wgHr6efX5+fn59fX1dWTg0NDU6eB///////////////////////////
        ////////////9gfup59fV1ZWVk5OVlae7vb/////////////////////////////////////////////
        9vYIBwcHBwcH9vb/////////////////////////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>